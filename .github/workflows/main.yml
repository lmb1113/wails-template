name: "wails-template"
permissions:
  contents: write
  actions: write
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  package:
    strategy:
      matrix:
        platform: [ windows-latest, macos-latest ]
        go-version: [ 1.24 ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
      # You may need to manually build you frontend manually here, unless you have configured frontend build and install commands in wails.json.
      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: Build Wails app
        run: |
          wails build
      - name: upload artifacts macOS
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wails-template-macos
          path: build/bin/*
      - name: upload artifacts windows
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: wails-template-windows
          path: build/bin/*

  create-release:
    runs-on: ubuntu-latest
    needs: package
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Show Release URL
        run: echo "Release created at ${{ steps.create_release.outputs.html_url }}"

  upload-assets:
    runs-on: ubuntu-latest
    needs: [package, create-release]
    steps:
      - name: Create Assets Directory
        run: mkdir -p assets

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: wails-template-macos
          path: dist/macos

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: wails-template-windows
          path: dist/windows

      - name: Compress macOS Bundle
        run: |
          cd dist/macos
          zip -r ../../assets/wails-template-macos.zip .

      - name: Compress Windows Bundle
        run: |
          cd dist/windows
          zip -r ../../assets/wails-template-windows.zip .

      - name: Create Source Archive
        run: |
          git archive --format=zip -o assets/source-code.zip ${{ github.ref }}

      - name: List Assets
        run: ls -lh assets

      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: assets/wails-template-macos.zip
          asset_name: wails-template-macos.zip
          asset_content_type: application/zip

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: assets/wails-template-windows.zip
          asset_name: wails-template-windows.zip
          asset_content_type: application/zip

      - name: Upload Source Code
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: assets/source-code.zip
          asset_name: source-code.zip
          asset_content_type: application/zip

      - name: Cleanup
        run: rm -rf dist assets